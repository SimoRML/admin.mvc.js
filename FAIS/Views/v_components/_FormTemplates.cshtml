<script type="text/javascript">
    var FormMixin = {
        mixins: [MixinBase],
        props: ['label', 'optional', 'datasource', 'value', 'cssClass', 'fieldName'],
        data: function () {
            return {
                data: null,
                model: null
            }
        },
        created: function () {
            var me = this;
            console.log("LOADING DATA SOURCE", me.datasource);
            bus.loadList(this.fieldName, me.datasource, (response) => { me.populateData(response) });
        },
        computed: {
            isOptional: function () {
                return typeof this.optional !== "undefined" && this.optional.toString() === "1";
            }
        },
        methods: {
            bindBack: function (e) {
                if (e.target.type === "checkbox")
                    this.$emit('input', e.target.checked ? 1 : 0);
                else
                    this.$emit('input', e.target.value, this.data);

                bus.$emit(this.elementId + "-changed", e.target);
                console.log("**" + e.target.type);
                if (e.target.type == "select-one") {
                    //console.log(e.target.value);
                    this.emitChanged(e.target.value);
                }
            },
            populateData: function (data) {
                var me = this;
                // console.log("populateData : " + me.id);
                me.data = data;
                if (me.$refs.selectpicker != null)
                    me.setValue();
            }
        }
    }
</script>

@*-----------------------------------------------------------------------------------------------------LABEL-----------------------*@
<script id="v-label-template" type="text/template">
    <div :id="elementId" :class="cssClass + ' form-group label-floating'">
        <label class="control-label">{{ label }}<i v-show="isOptional"> - optionel</i></label>
        <input type="text" class="form-control"
               :value="value" readonly>
    </div>
</script>
<script type="text/javascript">
    Vue.component('v-label', {
        template: $("#v-label-template").html(),
        mixins: [FormMixin]
    });
</script>

@*-----------------------------------------------------------------------------------------------------EMAIL-----------------------*@
<script id="v-email-template" type="text/template">
    <div :id="elementId" :class="cssClass + ' form-group label-floating'">
        <label class="control-label">{{ label }}<i v-show="isOptional"> - optionel</i></label>
        <input type="email" class="form-control"
               :value="value"
               v-on:input="bindBack($event)"
               :required="!isOptional">
    </div>
</script>
<script type="text/javascript">
    Vue.component('v-email', {
        template: $("#v-email-template").html(),
        mixins: [FormMixin]
    });
</script>


@*-----------------------------------------------------------------------------------------------------TEXT-----------------------*@
<script id="v-text-template" type="text/template">
    <div :id="elementId" :class="cssClass + ' form-group label-floating'">
        <label class="control-label">{{ label }}<i v-show="isOptional"> - optionel</i></label>
        <input type="text" class="form-control"
               :value="value"
               v-on:input="bindBack($event)"
               :required="!isOptional">
    </div>
</script>
<script type="text/javascript">
    Vue.component('v-text', {
        template: $("#v-text-template").html(),
        mixins: [FormMixin]
    });
</script>


@*-----------------------------------------------------------------------------------------------------TEXT AREA-----------------------*@
<script id="v-textarea-template" type="text/template">
    <div :id="elementId" :class="cssClass + ' form-group label-floating'">
        <label class="control-label">{{ label }}<i v-show="isOptional"> - optionel</i></label>
        <textarea type="text" class="form-control" style="min-height: 100px;"
                  :value="value"
                  v-on:input="bindBack($event)"
                  :required="!isOptional"></textarea>
    </div>
</script>
<script type="text/javascript">
    Vue.component('v-textarea', {
        template: $("#v-textarea-template").html(),
        mixins: [FormMixin]
    });
</script>

@*-----------------------------------------------------------------------------------------------------NUMBER-----------------------*@
<script id="v-number-template" type="text/template">
    <div :id="elementId" :class="cssClass + ' form-group label-floating'">
        <label class="control-label">{{ label }}<i v-show="isOptional"> - optionel</i></label>
        <input type="number" class="form-control"
               :value="value"
               v-on:input="bindBack($event)"
               :required="!isOptional">
    </div>
</script>
<script type="text/javascript">
    Vue.component('v-number', {
        template: $("#v-number-template").html(),
        mixins: [FormMixin]
    });
</script>

@*-----------------------------------------------------------------------------------------------------hidden-----------------------*@
<script id="v-hidden-template" type="text/template">
    <div :id="elementId">
        <input type="hidden"
               :value="value">
    </div>
</script>
<script type="text/javascript">
    Vue.component('v-hidden', {
        template: $("#v-hidden-template").html(),
        mixins: [FormMixin]
    });
</script>
@*-----------------------------------------------------------------------------------------------------SELECT-----------------------*@
<script id="v-select-template" type="text/template">
    <div :id="elementId" :class="cssClass + ' form-group label-floating'">
        <label class="control-label">{{ label }}<i v-show="isOptional"> - optionel</i></label>
        <select ref="selectpicker" class="selectpicker" data-style="select-with-transition" title="Choisir"
                v-model="selected"
                v-on:change="bindBack($event)"
                :required="!isOptional">
            <option value=""> Choisir </option>
            <option v-for="item in data" :value="item.Value"> {{ item.Display }} </option>
        </select>
    </div>
</script>
<script type="text/javascript">
    Vue.component('v-select', {
        template: $("#v-select-template").html(),
        mixins: [FormMixin],
        data: function () {
            return {
                selected: this.value
            }
        },
        watch: {
            value: function (newVal, oldVal) { // watch it
                // console.log('(' + this.id + ') value changed: ', newVal, ' | was: ', oldVal, ' | selected: ' + this.selected)
                this.setValue(newVal);

            }
        },
        methods: {
            setValue: function (value) {
                var me = this;
                if (me.data === null) return;

                // console.log("setValue : (" + me.id +")", me.value, me.data);
                if (typeof value !== "undefined") me.selected = value;
                // console.log("setValue me.selected : " + me.id, "'" + me.selected + "'");
                // var time = me.selected == '' ? 1000 : 100;
                setTimeout(function () {
                    // console.log("setValue : " + me.id, "'" + me.selected + "'");
                    $("#" + me.elementId + " select").val(me.selected);
                    $("#" + me.elementId + " select").selectpicker('refresh');
                    bus.$emit(me.elementId + "-changed", me.$refs.selectpicker);
                    me.emitChanged(me.selected);
                }, 100);
            },
            emitChanged: function (value) {
                //console.log("__" + value);
                if (value == "") return;
                if (this.data == null) return;

                var selectedObject = null;
                //console.log("emitChanged (" + this.id + ") value", value);
                //console.log("emitChanged (" + this.id + ") data", this.data);
                this.data.forEach((item) => {
                    if (item.Value == value)
                        selectedObject = item;
                });
                // console.log("emitChanged (" + this.id +") selectedObject", selectedObject);
                this.$emit('changed', value, selectedObject);
            }
        },
        mounted: function () {
            this.setValue();
        }
    });

</script>


@*-----------------------------------------------------------------------------------------------------DatePicker-----------------------*@
<script id="FormDatePickerTemplate" type="text/template">
    <div :id="elementId" :class="cssClass + ' form-group'">
        <label class="label-control" v-show="typeof label !== 'undefined'">
            {{ label }}<i v-show="isOptional"> - optionel</i>
        </label>
        <input type="date" class="form-control"
               :value="value && value.split('T')[0]"
               v-on:input="bindBack($event)"
               :required="!isOptional" />
    </div>
</script>
<script type="text/javascript">
    Vue.component('v-datepicker', {
        template: $("#FormDatePickerTemplate").html(),
        mixins: [FormMixin]
    });
</script>

@*-----------------------------------------------------------------------------------------------------checkbox-----------------------*@
<script id="v-checkbox-template" type="text/template">
    <div :id="elementId" :class="cssClass + ' form-group'">
        <div class="checkbox">
            <label>
                <input type="checkbox" name="optionsCheckboxes"
                       v-model="isChecked"
                       v-on:change="bindBack($event)"
                       :required="!isOptional">{{ label }}<i v-show="isOptional"> - optionel</i>
            </label>
        </div>
    </div>
</script>
<script type="text/javascript">
    Vue.component('v-checkbox', {
        template: $("#v-checkbox-template").html(),
        mixins: [FormMixin],
        computed: {
            isChecked: function () {
                return this.value == 1;
            }
        }
    });
</script>
