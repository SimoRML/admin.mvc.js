<style>
    .swal2-content {
        font-size: 100% !important;
    }

    .column {
        height: 68vh;
        border: 1px #aaa dotted;
        border-radius: 5px;
        padding: 0px 10px;
        overflow-x: hidden;
        overflow-y: auto;
    }

        .column h5 {
            border-bottom: 1px dotted #aaa;
        }

            .column h5 .dropdown {
                margin-top: -5px;
            }

    .field {
        margin: 3px 10px 5px 0px;
    }

        .field button {
            width: 100%;
        }

    .validator {
        text-transform: lowercase;
    }
</style>
<div id="validation-vue-app" style="text-align:left">
    <div class="card-header">
        <h4 class="card-title">Configurer validation</h4>
    </div>
    <div class="card-content">
      
        <div class="row form-group">
            <v-text id="status" label="Statut" v-model="status"></v-text>
            <div class="col-md-3">
                <div class="column">
                    <h5>BO > {{ meta.BO_NAME }} :</h5>
                    <div class="field"
                         v-for="item in meta.META_FIELD">
                        <button  v-if="item.FORM_TYPE.indexOf('subform')==-1" class="btn btn-sm btn-info"
                                v-on:click="addCondition(item)">
                            {{ item.FORM_NAME }}
                            <span class="btn-label pull-right">
                                <i class="material-icons">add</i>
                            </span>
                        </button>
                    </div>
                </div>
            </div>
            <div class="col-md-6">
                <div class="column">
                    <h5>Règles de validation :</h5>
                    <template v-for="rule in rules" v-if="rule.status != 'deleted'">
                        <div class="row">
                            <div class="dropdown col-md-2">
                                <button href="#" class="dropdown-toggle btn btn-warning btn-simple" data-toggle="dropdown">
                                    {{ rule.logic }}
                                </button>
                                <ul class="dropdown-menu dropdown-menu-left">
                                    <li>
                                        <a href="javascript:;" v-on:click="rule.logic = 'AND'">
                                            AND
                                        </a>
                                    </li>
                                    <li>
                                        <a href="javascript:;" v-on:click="rule.logic = 'OR'">
                                            OR
                                        </a>
                                    </li>
                                </ul>
                            </div>
                            <div class="dropdown col-md-3">
                                <button href="#" class="dropdown-toggle btn btn-simple btn-info" data-toggle="dropdown">
                                    {{ rule.field.FORM_NAME }}
                                </button>
                                <ul class="dropdown-menu dropdown-menu-left">
                                    <li v-for="item in meta.META_FIELD">
                                        <a href="javascript:;" v-on:click="rule.field = item">
                                            {{ item.FORM_NAME }}
                                        </a>
                                    </li>
                                </ul>
                            </div>
                            <div class="dropdown col-md-2">
                                <button href="#" class="dropdown-toggle btn btn-success btn-simple" data-toggle="dropdown">
                                    {{ rule.condition }}
                                </button>
                                <ul class="dropdown-menu dropdown-menu-left">
                                    <li v-for="c in conditions">
                                        <a href="javascript:;" v-on:click="rule.condition = c">
                                            {{ c }}
                                        </a>
                                    </li>
                                </ul>
                            </div>
                            <div class="col-md-3">
                                <input type="text" class="form-control" v-model="rule.value">
                            </div>
                            <div class="col-md-1">
                                <button class="btn btn-sm btn-danger btn-simple"
                                        v-on:click="rule.status = 'deleted'">
                                    <i class="material-icons">delete</i>
                                </button>
                            </div>
                        </div>
                        <hr />
                    </template>
                </div>
            </div>
            <div class="col-md-3">
                <div class="column">
                    <h5>
                        Validateur :
                        <div class="dropdown pull-right">
                            <button href="#" class="dropdown-toggle btn btn-xs btn-primary btn-simple" data-toggle="dropdown">
                                <i class="material-icons">add</i>
                            </button>
                            <ul class="dropdown-menu dropdown-menu-left">
                                <li v-for="v in validatorsList">
                                    <a href="javascript:;" v-on:click="addValidator(v)">
                                        {{ v }}
                                    </a>
                                </li>
                            </ul>
                        </div>
                    </h5>
                    <div class="field"
                         v-for="v in validators"
                         v-if="v.status != 'deleted'">
                        <button class="btn btn-sm btn-primary validator"
                                v-on:click="v.status='deleted'">
                            {{ v.email }}
                            <span class="btn-label pull-right">
                                <i class="material-icons">delete</i>
                            </span>
                        </button>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
<script type="text/javascript">
    var api=EV.getComponent('data')
    var metaBoId = @ViewBag.id;
    var validationVapp = new Vue({
        el: "#validation-vue-app",
        data: {
            meta: {},
            rules: [],
            validators: [],
            validatorsList:[],
            conditions: ["=", "<", "<=", ">", ">=", "<>"],
            status:"valide"
        },
        methods: {
            addCondition: function(field){
                this.rules.push({
                    logic: "AND",
                    field: field,
                    condition: "=",
                    value:"",
                    status:"new"
                });
            },
            addValidator: function (validator) {
                this.validators.push({email: validator, status: "new"});
            },
            val: function (data) {
                if (typeof data !== "undefined") {
                    this.rules = data.rules;
                    this.validators = data.validators;
                    this.status = data.status;
                }
                else return { metaBoId: this.meta.META_BO_ID, rules: this.rules, validators: this.validators, status: this.status };
            }
        },
        mounted: function () {
            var me = this;
            bus.lists.metaList.forEach((e) => {
                if (e.META_BO_ID === metaBoId) {
                    me.meta = e;
                    api.Get({
                        url: "MetaField/metabo/" + e.META_BO_ID,
                        done: function (response) {
                            me.meta.META_FIELD = response;
                        }
                    });
                    return;
                }
            });

            EV.getComponent("data").Get(
                {
                    url: "profile/Validators",
                    done: function (response) {
                        me.validatorsList = response;
                    }
                }
                );
        }
    });
</script>