<div id="vappRolesUsers">
    <div class="col-md-12">
        <h4>
            <i class="material-icons">supervisor_account</i> Rôle : {{ role.Name }} > Utilisateurs
            <div class="dropdown pull-right">
                <button href="#" class="dropdown-toggle btn btn-primary btn-round btn-fab btn-fab-mini btn-fab-x-mini"
                        data-toggle="dropdown">
                    <i class="material-icons">person_add</i>
                </button>
                <ul class="dropdown-menu dropdown-menu-left">
                    <li v-for="u in usersList">
                        <a href="javascript:;" v-on:click="add(u)">
                            {{ u.Email }}
                        </a>
                    </li>
                </ul>
            </div>
        </h4>
        <div style="width:40vw">
            <table class="table table-striped">
                <tbody>
                    <tr v-for="(u, idx) in users" v-bind:key="u.Email" v-show="u.status != 'trash'">
                        <td :class="{'deleted-wavy': u.status=='delete'}">
                            {{ u.Email }}
                        </td>
                        <td align="right">
                            <button v-if="u.status == 'delete'" href="#" class="dropdown-toggle btn btn-success btn-round btn-fab btn-fab-mini btn-fab-x-mini"
                                    v-on:click="restoreUser(u)">
                                <i class="material-icons">restore</i>
                            </button>
                            <button v-else href="#" class="dropdown-toggle btn btn-danger btn-round btn-fab btn-fab-mini btn-fab-x-mini"
                                    v-on:click="deleteUser(u)">
                                <i class="material-icons">delete</i>
                            </button>
                        </td>
                    </tr>
                </tbody>
            </table>
        </div>
    </div>
</div>
<script type="text/javascript">
    var vappRolesUsers = new Vue({
        el: "#vappRolesUsers",
        data: {
            role: {},
            users: [],
            usersList: [],
        },
        methods: {
            val: function (data) {
                if (typeof data !== "undefined") {
                    var me = this;
                    this.role = data.role;
                    EV.getComponent('data').Get({
                        url: "profile/users/" + me.role.Id,
                        done: function (response) {
                            me.users = response;
                        },
                    });
                }
                return this.users.filter(u => u.status != 'trash');
            },
            add: function (user) {
                // log.red("add", this.users.filter(u => u.Id == user.Id));
                var existedUser = this.users.filter(u => u.Id == user.Id);
                if (existedUser.length > 0)
                    existedUser[0].status = existedUser[0].status == 'trash' ? 'new' : 'old';
                else
                    this.users.push({ Email: user.Email, Id: user.Id, status: 'new' });
                this.users.push({ Emeil: '', status: 'trash' });
            },
            deleteUser: function (user) {
                // Vue.set(user, 'status', 'delete');
                // log.red("deleteUser", this.users.filter(u => u.Id == Id));
                //for (var i in this.users) {
                //    if (this.users.Id == Id) this.users[i].status = 'delete';
                //}
                user.status = user.status == 'new' ? 'trash' : 'delete';
                this.users.push({ Emeil:'',status: 'trash' });
            },
            restoreUser: function (user) {
                user.status = 'old';
                this.users.push({ Emeil: '', status: 'trash' });
            },
        },
        mounted: function () {
            var me = this;
            EV.getComponent('data').Get({
                url: "profile/users",
                done: function (response) {
                    me.usersList = response;
                },
            });
        }
    });
</script>
